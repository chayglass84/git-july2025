type: spec.insomnia.rest/5.0
name: KongAir
meta:
  id: wrk_f9f0d449b6064252b7c99ab31ce88dc8
  created: 1755267341972
  modified: 1755267341972
  description: ""
collection:
  - name: Routes
    meta:
      id: fld_5df718a3ec6e4d0ba5b80c92095b08aa
      created: 1755267553714
      modified: 1755267553714
      sortKey: -1755267553714
      description: Create and manage flight routes
    children:
      - url: "{{ _.base_url }}/routes"
        name: Create a route
        meta:
          id: req_3ad35c3d9a9d4bcebdd227fa5851a8d4
          created: 1755267553715
          modified: 1755267553715
          isPrivate: false
          description: ""
          sortKey: -1755267553715
        method: POST
        body:
          mimeType: application/json
          text: |-
            {
              "origin": "string",
              "destination": "string",
              "flightNumbers": [
                "string"
              ]
            }
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/routes/{{ _.routeId }}"
        name: Get a route
        meta:
          id: req_ad79d9f217e244d78e7bb95c123982f2
          created: 1755267553715
          modified: 1755267553715
          isPrivate: false
          description: ""
          sortKey: -1755267553715
        method: GET
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/routes"
        name: List routes
        meta:
          id: req_e4008423134d43c3a96edd27df4b1231
          created: 1755267553715
          modified: 1755267553715
          isPrivate: false
          description: ""
          sortKey: -1755267553715
        method: GET
        parameters:
          - name: origin
            disabled: true
            value: string
          - name: destination
            disabled: true
            value: string
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/routes/{{ _.routeId }}"
        name: Partially update a route
        meta:
          id: req_4d32c15a834e4e948b6ccdf0b9768319
          created: 1755267553716
          modified: 1755267553716
          isPrivate: false
          description: ""
          sortKey: -1755267553716
        method: PATCH
        body:
          mimeType: application/json
          text: |-
            {
              "origin": "string",
              "destination": "string",
              "flightNumbers": [
                "string"
              ]
            }
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/routes/{{ _.routeId }}"
        name: Replace a route
        meta:
          id: req_7e32ddbc331840189435146459b512c7
          created: 1755267553716
          modified: 1755267553716
          isPrivate: false
          description: ""
          sortKey: -1755267553716
        method: PUT
        body:
          mimeType: application/json
          text: "null"
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/routes/{{ _.routeId }}"
        name: Delete a route
        meta:
          id: req_cb9a2a1da8c34ebb96b6fcf269a9d404
          created: 1755267553716
          modified: 1755267553716
          isPrivate: false
          description: ""
          sortKey: -1755267553716
        method: DELETE
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
  - name: Bookings
    meta:
      id: fld_795f45acd9f848b989e096ed8a604155
      created: 1755267553714
      modified: 1755267553714
      sortKey: -1755267553714
      description: Create and manage flight bookings
    children:
      - url: "{{ _.base_url }}/bookings"
        name: List bookings
        meta:
          id: req_66045cf48cb0449ea35e2f5e3ce437ac
          created: 1755267553716
          modified: 1755267553716
          isPrivate: false
          description: ""
          sortKey: -1755267553716
        method: GET
        parameters:
          - name: passengerLastName
            disabled: true
            value: string
          - name: flightId
            disabled: true
            value: string
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/bookings/{{ _.bookingId }}"
        name: Replace a booking
        meta:
          id: req_269f3828e8a549e1b61ecd309fa8ffe7
          created: 1755267553717
          modified: 1755267553717
          isPrivate: false
          description: ""
          sortKey: -1755267553717
        method: PUT
        body:
          mimeType: application/json
          text: "null"
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/bookings/{{ _.bookingId }}"
        name: Cancel a booking
        meta:
          id: req_35861a0a58da402b87f80cb5fce59017
          created: 1755267553717
          modified: 1755267553717
          isPrivate: false
          description: ""
          sortKey: -1755267553717
        method: DELETE
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/bookings"
        name: Create a booking
        meta:
          id: req_ad48526f6f92465e9179d258f788f647
          created: 1755267553717
          modified: 1755267553717
          isPrivate: false
          description: ""
          sortKey: -1755267553717
        method: POST
        body:
          mimeType: application/json
          text: |-
            {
              "flightId": "string",
              "passengers": [
                {
                  "firstName": "string",
                  "lastName": "string"
                }
              ],
              "contactEmail": "user@example.com"
            }
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/bookings/{{ _.bookingId }}"
        name: Get a booking
        meta:
          id: req_bd86a8f39f094af789102e5b44e83130
          created: 1755267553717
          modified: 1755267553717
          isPrivate: false
          description: ""
          sortKey: -1755267553717
        method: GET
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/bookings/{{ _.bookingId }}"
        name: Partially update a booking
        meta:
          id: req_e305d5540078431ea401ee68a902033d
          created: 1755267553717
          modified: 1755267564265
          isPrivate: false
          description: ""
          sortKey: -1755267553717
        method: PATCH
        body:
          mimeType: application/json
          text: |-
            {
              "passengers": [
                {
                  "firstName": "string",
                  "lastName": "string"
                }
              ],
              "contactEmail": "user@example.com",
              "status": "string"
            }
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
  - name: Flights
    meta:
      id: fld_8ff23f3d397b4534b664db402af4f8c7
      created: 1755267553714
      modified: 1755267553714
      sortKey: -1755267553714
      description: Search and check flight status
    children:
      - url: "{{ _.base_url }}/flights"
        name: Search flights
        meta:
          id: req_9b3a713f5b714b709959714c72d509fd
          created: 1755267553717
          modified: 1755267553717
          isPrivate: false
          description: |
            Simple availability search (not a full flight inventory system).
          sortKey: -1755267553717
        method: GET
        parameters:
          - name: origin
            disabled: false
            value: string
          - name: destination
            disabled: false
            value: string
          - name: departureDate
            disabled: false
            value: string
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/flights/{{ _.flightId }}/status"
        name: Check flight status
        meta:
          id: req_76004c3146ab48e297c8ed85ad3988c1
          created: 1755267553718
          modified: 1755267553718
          isPrivate: false
          description: ""
          sortKey: -1755267553718
        method: GET
        authentication:
          type: apikey
          key: X-API-Key
          value: "{{ _.xApiKey }}"
          addTo: header
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_d646ecc8d5a6a17ceebd62d220b0919ae1b2cb8a
    created: 1755267341975
    modified: 1755267341975
environments:
  name: Base Environment
  meta:
    id: env_d646ecc8d5a6a17ceebd62d220b0919ae1b2cb8a
    created: 1755267341974
    modified: 1755267553713
    isPrivate: false
  data:
    base_url: "{{ _.scheme }}://{{ _.host }}{{ _.base_path }}"
  subEnvironments:
    - name: OpenAPI env api.kongair.example.com
      meta:
        id: env_97ef8929e5774f10bddf4c5917e1aca8
        created: 1755267553713
        modified: 1755267553713
        isPrivate: false
        sortKey: 1755267553713
      data:
        scheme: https
        base_path: /v1
        host: api.kongair.example.com
        xApiKey: xApiKey
spec:
  contents:
    openapi: 3.0.3
    info:
      title: KongAir API
      version: 1.0.0
      description: >
        KongAir API provides programmatic access to KongAir’s core airline
        services, enabling developers

        to integrate flight search, booking, and operational status data into
        their applications.


        With this API, you can:

        - Search available flights and check real-time flight status

        - Create, view, update, and cancel customer bookings

        - Define and manage flight routes operated by KongAir


        All endpoints follow RESTful principles, use standard HTTP response
        codes, and exchange data in JSON.

        Access is secured via API key authentication.


        This API is ideal for building travel booking platforms, operational
        dashboards, or mobile

        experiences that need live airline data and booking capabilities.
    servers:
      - url: https://api.kongair.example.com/v1
    tags:
      - name: Routes
        description: Create and manage flight routes
      - name: Bookings
        description: Create and manage flight bookings
      - name: Flights
        description: Search and check flight status
    paths:
      /routes:
        get:
          tags:
            - Routes
          summary: List routes
          parameters:
            - in: query
              name: origin
              schema:
                type: string
                pattern: ^[A-Z]{3}$
              description: Filter by IATA origin code (e.g., YVR)
            - in: query
              name: destination
              schema:
                type: string
                pattern: ^[A-Z]{3}$
              description: Filter by IATA destination code (e.g., JFK)
          responses:
            "200":
              description: A list of routes
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Route"
        post:
          tags:
            - Routes
          summary: Create a route
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/RouteCreate"
                examples:
                  example:
                    value:
                      origin: YVR
                      destination: JFK
                      flightNumbers:
                        - KGA101
                        - KGA102
          responses:
            "201":
              description: Created
              headers:
                Location:
                  schema:
                    type: string
                  description: URL of the new resource
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Route"
      /routes/{routeId}:
        parameters:
          - $ref: "#/components/parameters/RouteId"
        get:
          tags:
            - Routes
          summary: Get a route
          responses:
            "200":
              description: Route found
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Route"
            "404":
              $ref: "#/components/responses/NotFound"
        put:
          tags:
            - Routes
          summary: Replace a route
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/RouteUpdate"
          responses:
            "200":
              description: Updated route
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Route"
            "404":
              $ref: "#/components/responses/NotFound"
        patch:
          tags:
            - Routes
          summary: Partially update a route
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/RoutePatch"
          responses:
            "200":
              description: Updated route
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Route"
            "404":
              $ref: "#/components/responses/NotFound"
        delete:
          tags:
            - Routes
          summary: Delete a route
          responses:
            "204":
              description: Deleted
            "404":
              $ref: "#/components/responses/NotFound"
      /bookings:
        get:
          tags:
            - Bookings
          summary: List bookings
          parameters:
            - in: query
              name: passengerLastName
              schema:
                type: string
            - in: query
              name: flightId
              schema:
                type: string
                format: uuid
          responses:
            "200":
              description: A list of bookings
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Booking"
        post:
          tags:
            - Bookings
          summary: Create a booking
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/BookingCreate"
                examples:
                  example:
                    value:
                      flightId: 9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d
                      passengers:
                        - firstName: Cameron
                          lastName: HayGlass
                      contactEmail: cameron@example.com
          responses:
            "201":
              description: Created
              headers:
                Location:
                  schema:
                    type: string
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Booking"
      /bookings/{bookingId}:
        parameters:
          - $ref: "#/components/parameters/BookingId"
        get:
          tags:
            - Bookings
          summary: Get a booking
          responses:
            "200":
              description: Booking found
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Booking"
            "404":
              $ref: "#/components/responses/NotFound"
        put:
          tags:
            - Bookings
          summary: Replace a booking
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/BookingUpdate"
          responses:
            "200":
              description: Updated booking
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Booking"
            "404":
              $ref: "#/components/responses/NotFound"
        patch:
          tags:
            - Bookings
          summary: Partially update a booking
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/BookingPatch"
          responses:
            "200":
              description: Updated booking
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Booking"
            "404":
              $ref: "#/components/responses/NotFound"
        delete:
          tags:
            - Bookings
          summary: Cancel a booking
          responses:
            "204":
              description: Cancelled
            "404":
              $ref: "#/components/responses/NotFound"
      /flights:
        get:
          tags:
            - Flights
          summary: Search flights
          description: |
            Simple availability search (not a full flight inventory system).
          parameters:
            - in: query
              name: origin
              required: true
              schema:
                type: string
                pattern: ^[A-Z]{3}$
            - in: query
              name: destination
              required: true
              schema:
                type: string
                pattern: ^[A-Z]{3}$
            - in: query
              name: departureDate
              required: true
              schema:
                type: string
                format: date
          responses:
            "200":
              description: Matching flights
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Flight"
      /flights/{flightId}/status:
        parameters:
          - $ref: "#/components/parameters/FlightId"
        get:
          tags:
            - Flights
          summary: Check flight status
          responses:
            "200":
              description: Status returned
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/FlightStatus"
            "404":
              $ref: "#/components/responses/NotFound"
    components:
      securitySchemes:
        ApiKeyAuth:
          type: apiKey
          in: header
          name: X-API-Key
      parameters:
        RouteId:
          name: routeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Route identifier
        BookingId:
          name: bookingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Booking identifier
        FlightId:
          name: flightId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Flight identifier
      responses:
        NotFound:
          description: Resource not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      schemas:
        Route:
          type: object
          required:
            - id
            - origin
            - destination
            - flightNumbers
            - createdAt
            - updatedAt
          properties:
            id:
              type: string
              format: uuid
            origin:
              type: string
              description: IATA code
              example: YVR
            destination:
              type: string
              description: IATA code
              example: JFK
            flightNumbers:
              type: array
              items:
                type: string
              example:
                - KGA101
                - KGA102
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
        RouteCreate:
          type: object
          required:
            - origin
            - destination
          properties:
            origin:
              type: string
              pattern: ^[A-Z]{3}$
            destination:
              type: string
              pattern: ^[A-Z]{3}$
            flightNumbers:
              type: array
              items:
                type: string
        RouteUpdate:
          allOf:
            - $ref: "#/components/schemas/RouteCreate"
        RoutePatch:
          type: object
          properties:
            origin:
              type: string
              pattern: ^[A-Z]{3}$
            destination:
              type: string
              pattern: ^[A-Z]{3}$
            flightNumbers:
              type: array
              items:
                type: string
        Passenger:
          type: object
          required:
            - firstName
            - lastName
          properties:
            firstName:
              type: string
            lastName:
              type: string
        Booking:
          type: object
          required:
            - id
            - flightId
            - passengers
            - contactEmail
            - status
            - createdAt
            - updatedAt
          properties:
            id:
              type: string
              format: uuid
            flightId:
              type: string
              format: uuid
            passengers:
              type: array
              items:
                $ref: "#/components/schemas/Passenger"
            contactEmail:
              type: string
              format: email
            status:
              type: string
              enum:
                - CONFIRMED
                - CANCELLED
                - PENDING
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
        BookingCreate:
          type: object
          required:
            - flightId
            - passengers
            - contactEmail
          properties:
            flightId:
              type: string
              format: uuid
            passengers:
              type: array
              minItems: 1
              items:
                $ref: "#/components/schemas/Passenger"
            contactEmail:
              type: string
              format: email
        BookingUpdate:
          allOf:
            - $ref: "#/components/schemas/BookingCreate"
        BookingPatch:
          type: object
          properties:
            passengers:
              type: array
              items:
                $ref: "#/components/schemas/Passenger"
            contactEmail:
              type: string
              format: email
            status:
              type: string
              enum:
                - CONFIRMED
                - CANCELLED
                - PENDING
        Flight:
          type: object
          required:
            - id
            - routeId
            - flightNumber
            - departure
            - arrival
          properties:
            id:
              type: string
              format: uuid
            routeId:
              type: string
              format: uuid
            flightNumber:
              type: string
              example: KGA101
            departure:
              type: object
              required:
                - airport
                - time
              properties:
                airport:
                  type: string
                  example: YVR
                time:
                  type: string
                  format: date-time
            arrival:
              type: object
              required:
                - airport
                - time
              properties:
                airport:
                  type: string
                  example: JFK
                time:
                  type: string
                  format: date-time
        FlightStatus:
          type: object
          required:
            - flightId
            - flightNumber
            - status
            - updatedAt
          properties:
            flightId:
              type: string
              format: uuid
            flightNumber:
              type: string
              example: KGA101
            status:
              type: string
              enum:
                - SCHEDULED
                - BOARDING
                - DEPARTED
                - LANDED
                - DELAYED
                - CANCELLED
            gate:
              type: string
              nullable: true
              example: A12
            terminal:
              type: string
              nullable: true
              example: T1
            updatedAt:
              type: string
              format: date-time
  meta:
    id: spc_6f0389fc1ca9480b82eba1b26b098feb
    created: 1755267341974
    modified: 1755524039232
